#!/bin/bash

# Get arch
if [ "$(uname -m)" = x86_64 ]; then
	lib=lib64
else
	lib=lib
fi

command -v fc-cache >/dev/null && fc-cache
which gtk-query-immodules-2.0 2>/dev/null && gtk-query-immodules-2.0 --update-cache
which gtk-query-immodules-3.0 2>/dev/null && gtk-query-immodules-3.0 --update-cache
[ -d /usr/share/glib-2.0/schemas ] && glib-compile-schemas /usr/share/glib-2.0/schemas
[ -d /usr/$lib/gio/modules ] && gio-querymodules /usr/$lib/gio/modules
command -v update-desktop-database && update-desktop-database
command -v pango-querymodules && pango-querymodules --update-cache
command -v gdk-pixbuf-query-loaders && gdk-pixbuf-query-loaders --update-cache
command -v update-mime-database && update-mime-database /usr/share/mime

## Ask to collect the cache files
read -r -p "Do you want to make a module from the caches? [y/n] " answ
[ "$answ" != "y" ] && exit

schemas=/usr/share/glib-2.0/schemas/gschemas.compiled
gtk2p=/usr/$lib/gtk-2.0/[0-9]*
gtk3p=/usr/$lib/gtk-3.0/[0-9]*
gdkp=/usr/$lib/gdk-pixbuf-2.0/[0-9]*

giom=/usr/$lib/gio/modules/giomodule.cache
gtk2m=$gtk2p/immodules.cache
gtk3m=$gtk3p/immodules.cache
gdkm=$gdkp/loaders.cache
mimem=/usr/share/mime/mime.cache
ddb=/usr/share/applications/mimeinfo.cache

mkdir /tmp/cachecreate
mkfontdir /usr/share/fonts/TTF
cp -a --parents /usr/share/fonts/TTF/fonts.dir /tmp/cachecreate

for a in $giom $gtk2m $gtk3m $gdkm $schemas $mimem $ddb; do
    [ -e $a ] && cp -a --parents $a /tmp/cachecreate
done
dir2xzm /tmp/cachecreate /tmp/009-caches.xzm
du -sh /tmp/009-caches.xzm
