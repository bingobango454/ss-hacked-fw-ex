#!/bin/bash
#
# rc.6		This file is executed by init when it goes into runlevel
#		0 (halt) or runlevel 6 (reboot). It kills all processes,
#		unmounts file systems and then either halts or reboots.

PATH=/sbin:/bin:/usr/sbin:/usr/bin

# If there are SystemV init scripts for this runlevel, run them:
[ -x /etc/rc.d/rc.sysvinit ] &&  . /etc/rc.d/rc.sysvinit

# Run rc.local_shutdown:
[ -x /etc/rc.d/rc.local_shutdown ] && /etc/rc.d/rc.local_shutdown

# See how the script was called and set the command to do that:
[ "$0" = "/etc/rc.d/rc.0" ] && command="poweroff" || command="reboot"

# Store random-seed to a file:
dd if=/dev/urandom of=/etc/random-seed count=1 bs=$(expr `cat /proc/sys/kernel/random/poolsize` / 8) 2>/dev/null
chmod 600 /etc/random-seed

# Write what's going to happen in wtmp:
$command -w

# Deactivate all porteus modules activated from /union:
deactivate `grep ^devpts -A500 /proc/mounts | grep '.xzm ' | cut -d" " -f2` >/dev/null 2>&1

# Close magic-folders encrypted containers:
for x in `ls /dev/mapper/magic* 2>/dev/null`; do
    umount `grep -w /dev/mapper/$x /proc/mounts | cut -d " " -f2`
    cryptsetup luksClose $x
done

# Detach loop devices used in /union:
losetup -a | grep /loop3 -A500 | grep -v '.xzm)' | cut -d: -f1 | xargs -n1 losetup -d 2>/dev/null
sync; echo

# Stop acpid/dbus/udev/nfsd:
udevadm control --exit 2>/dev/null
killall acpid dbus-daemon udevd 2>/dev/null
pidof nfsd >/dev/null && sh /etc/rc.d/rc.nfsd stop

# Turn off swap:
swapoff -a

# Some filesystems needs to be unmounted later:
echo "Unmounting local file systems"
sync
umount -at no,aufs,devtmpfs,proc,sysfs 2>/dev/null

# Sync what's left in buffers:
sync

# Deactivate LVM volume groups:
if [ -e /mnt/live/tmp/lvm ]; then
    echo "Deactivating LVM volume groups"
    vgchange -an --ignorelockingfailure
fi

# Deactivate RAID arrays:
if [ -e /mnt/live/tmp/raid ]; then
    echo "Deactivating RAID arrays"
    mdadm -S /dev/md/* 2>/dev/null
fi

# Run the cleanup script:
cd /mnt/live/
exec ./cleanup $command <dev/console >dev/console 2>&1

# Do halt or reboot depending on how the script was called:
$command -f >/dev/null 2>&1
